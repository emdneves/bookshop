name: Deploy Bookshop Frontend

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy-bookshop:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Deploy Bookshop Frontend to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /root/deployment/bookshop

          echo "üöÄ Starting Bookshop Frontend deployment..."

          # Ensure we're on the correct branch and pull the latest code
          git fetch origin
          git checkout master
          git reset --hard origin/master

          # Stop and remove any running bookshop containers
          echo "üõë Stopping and removing old bookshop containers..."
          docker-compose down

          # Remove any containers with the same name (just in case)
          docker rm -f bookshop-app || true

          # Remove old images (optional, for disk space)
          docker image prune -f

          # Build the new image
          echo "üî® Building new bookshop image..."
          docker-compose build --no-cache bookshop

          # Start the new container
          echo "‚ñ∂Ô∏è Starting new bookshop container..."
          docker-compose up -d bookshop

          # Wait for the container to start
          sleep 10

          # Show status
          docker ps --filter name=bookshop-app

          # Health check
          if curl -f http://localhost:3001/health || curl -f http://localhost/health; then
            echo "‚úÖ Bookshop frontend is healthy"
          else
            echo "‚ùå Bookshop frontend health check failed"
            docker logs bookshop-app
            exit 1
          fi

          echo "üéâ Bookshop Frontend deployment completed successfully!" 