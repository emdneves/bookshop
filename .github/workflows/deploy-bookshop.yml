name: Deploy Bookshop Frontend

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy-bookshop:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Deploy Bookshop Frontend to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /root/deployment/bookshop

          echo "🚀 Starting Bookshop Frontend deployment..."

          # Ensure we're on the correct branch and pull the latest code
          git fetch origin
          git checkout master
          git reset --hard origin/master

          # Stop and remove any running bookshop containers
          echo "🛑 Stopping and removing old bookshop containers..."
          docker-compose down

          # Remove any containers with the same name (just in case)
          docker rm -f bookshop-app || true

          # Remove old images (optional, for disk space)
          docker image prune -f

          # Build the new image
          echo "🔨 Building new bookshop image..."
          docker-compose build --no-cache bookshop

          # Start the new container
          echo "▶️ Starting new bookshop container..."
          docker-compose up -d bookshop

          # Wait for the container to start
          sleep 10

          # Update Nginx configuration to proxy to Docker container
          echo "🔧 Configuring Nginx for HTTPS..."
          cat > /etc/nginx/sites-available/theartifact.shop << 'EOF'
          server {
              listen 80;
              server_name theartifact.shop www.theartifact.shop;
              return 301 https://$server_name$request_uri;
          }

          server {
              listen 443 ssl http2;
              server_name theartifact.shop www.theartifact.shop;

              ssl_certificate /etc/letsencrypt/live/theartifact.shop/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/theartifact.shop/privkey.pem;

              # SSL configuration
              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
              ssl_prefer_server_ciphers off;

              # Proxy to Docker container
              location / {
                  proxy_pass http://localhost:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }

              # Health check
              location /health {
                  proxy_pass http://localhost:3000/health;
                  proxy_set_header Host $host;
              }
          }
          EOF

          # Test and reload Nginx
          nginx -t && systemctl reload nginx

          # Show status
          docker ps --filter name=bookshop-app

          # Health check
          if curl -f https://theartifact.shop/health; then
            echo "✅ Bookshop frontend is healthy with HTTPS"
          else
            echo "❌ Bookshop frontend health check failed"
            docker logs bookshop-app
            exit 1
          fi

          echo "🎉 Bookshop Frontend deployment completed successfully with HTTPS!" 